buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-release' }
        maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.18.RELEASE')
        classpath('mysql:mysql-connector-java:8.0.9-rc')
        classpath('org.junit.platform:junit-platform-gradle-plugin:1.1.0')
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
}

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext.springSecurityVersion = "5.6.3"
ext.springVersion = "5.3.19"
ext.springBootVersion = "2.1.18.RELEASE"
ext.junitVersion = '5.8.2'
ext.lombokVersion = "1.18.24"

compileTestJava {
    options.compilerArgs += '-parameters'
}

dependencies {
    implementation(
            "org.apache.commons:commons-collections4:4.4",
            "org.projectlombok:lombok:${lombokVersion}",
            "com.h2database:h2:1.4.196",
            "com.google.code.gson:gson:2.9.0",
            "org.hibernate.validator:hibernate-validator:6.0.8.Final",
            'org.apiguardian:apiguardian-api:1.0.0',
            'com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.5',
            'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.5',
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.5',
    )
    //Spring
    implementation(
            "org.springframework.security:spring-security-core:${springSecurityVersion}",
            "org.springframework.security:spring-security-web:${springSecurityVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework:spring-web:${springVersion}",
            "org.springframework:spring-context:${springVersion}",
    )
    runtimeOnly("mysql:mysql-connector-java:8.0.9-rc")

//    testImplementation(
//            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
//    ) {
////        exclude group: 'junit', module: 'junit'
////        exclude group: 'junit-jupiter', module: 'junit-jupiter'
//    }

    testImplementation(
//            "org.junit.jupiter:junit-jupiter",
            // spring boot has:
            // - org.junit.jupiter:junit-jupiter:5.8.2
            //
            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
            'org.apiguardian:apiguardian-api:1.0.0',
            'org.mockito:mockito-core:2.17.0',
            'org.hamcrest:hamcrest:2.2'
    )

    annotationProcessor(
            // Use mapstruct later
            // "org.mapstruct:mapstruct-processor:1.3.1.Final",
            "org.projectlombok:lombok:${lombokVersion}"
    )

    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine",
            "org.junit.platform:junit-platform-launcher:1.8.2"
    )

//    testImplementation(platform("org.junit:junit-bom"))
//    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    //testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    //testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
}


test {
    //Settings to use JUnit platform
    useJUnitPlatform()
//    testLogging {
//        events "passed", "skipped", "failed"
//    }

//    testLogging {
//        //Display standard output and standard error output during testing
//        showStandardStreams true
//        //Output event(TestLogEvent)
//        events 'started', 'skipped', 'passed', 'failed'
//        //Output settings when an exception occurs(TestExceptionFormat)
//        exceptionFormat 'full'
//    }
}
