buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.6.3")
        classpath("com.google.cloud.tools.jib:com.google.cloud.tools.jib.gradle.plugin:3.2.1")
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: 'application'
apply plugin: 'com.google.cloud.tools.jib'

sourceCompatibility = 11
targetCompatibility = 11

jib.to.image='astaBean/images-api'
jib.from.image='gradle:6.8.2-jdk9'
mainClassName = 'com.images.ImagesApiApplication'

ext.springBootVersion = "2.6.3"
ext.lombokVersion = "1.18.24"

dependencies {
    implementation("org.hibernate.validator:hibernate-validator:6.0.8.Final") {
        exclude group: "org.junit.jupiter"
    }

    implementation(
            "org.projectlombok:lombok:${lombokVersion}",
            "com.h2database:h2:1.4.196",
            "com.google.code.gson:gson:2.8.2",
            "com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.5",
            "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.5",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.5",
            "org.apache.commons:commons-collections4:4.4"
    )

    implementation(
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    )

    runtimeOnly("mysql:mysql-connector-java:8.0.29")

    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

compileTestJava {
    options.compilerArgs += "-parameters"
}

test {
    useJUnitPlatform()
    dependsOn cleanTest
}
